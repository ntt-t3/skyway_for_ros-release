name: ReleaseLibrary

on:
  push:
    tags:
      - "lib_v[0-9].[0-9]+.[0-9]+"

jobs:
  setup-release:
    name: Setup release
    runs-on: ubuntu-20.04
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Get url to upload to release from output
        env:
          url: ${{ steps.create_release.outputs.upload_url }}
        run: |
          mkdir artifact
          echo $url > artifact/url.txt

      - name: Upload artifact to share url with other jobs
        uses: actions/upload-artifact@v1
        with:
          name: artifact
          path: artifact/url.txt

  build_20_04:
    name: Build 20.04 binary
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@stable

      - name: Build
        run: cargo build --release --all-features --manifest-path rust_module/Cargo.toml

      - name: Download artifact to get url to upload to release
        uses: actions/download-artifact@v1
        with:
          name: artifact

      - name: Get url to upload to release from artifact
        id: get_url
        run: |
          url=$(cat artifact/url.txt)
          echo "upload_url=$url" >> $GITHUB_ENV

      - name: Upload release asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.upload_url }}
          asset_path: rust_module/target/release/libskyway.a
          asset_name: libskyway_20.04.a
          asset_content_type: application/octet-stream

  build_18_04:
    name: Build 18.04 binary
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@stable

      - name: Build
        run: cargo build --release --all-features --manifest-path rust_module/Cargo.toml

      - name: Download artifact to get url to upload to release
        uses: actions/download-artifact@v1
        with:
          name: artifact

      - name: Get url to upload to release from artifact
        id: get_url
        run: |
          url=$(cat artifact/url.txt)
          echo "upload_url=$url" >> $GITHUB_ENV

      - name: Upload release asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.upload_url }}
          asset_path: rust_module/target/release/libskyway.a
          asset_name: libskyway_18.04.a
          asset_content_type: application/octet-stream
